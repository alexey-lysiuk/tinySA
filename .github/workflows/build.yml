name: Build

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.compiler.name }}
    runs-on: ubuntu-${{ matrix.compiler.os }}

    strategy:
      fail-fast: false
      matrix:
        compiler:
          - name: GCC 7.2.1
            os: '22.04'
            deps: |
              TOOLCHAIN_PACKAGE=gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
              wget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/$TOOLCHAIN_PACKAGE
              sudo tar -C /usr/local -xf $TOOLCHAIN_PACKAGE

          - name: GCC 10.3
            os: '22.04'
            deps: sudo apt install gcc-arm-none-eabi

          - name: GCC 13.2
            os: '24.04'
            deps: sudo apt install gcc-arm-none-eabi

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Toolchain
        run: ${{ matrix.compiler.deps }}
 
      - name: Set Versions
        run: |
          echo "GCC_VERSION=$(arm-none-eabi-gcc -dumpversion)" >> $GITHUB_ENV
          echo "TINYSA_VERSION=$(git describe --tags --long)" >> $GITHUB_ENV

      - name: Build Firmware
        run: |
          echo "Building tinySA $TINYSA_VERSION with GCC $GCC_VERSION"
          make --keep-going TARGET=F303 USE_VERBOSE_COMPILE=1
          rm -r build/lst build/obj

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: tinySA4-${{ env.TINYSA_VERSION }}-gcc-${{ env.GCC_VERSION }}
          path: build

      - name: List Directories
        if: 0
        run: |
          git status
          ls -lR .

  package-all:
    needs: [build]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/download-artifact@v4

      - name: Prepare Complete Package
        run: |
          mkdir all
          mv tinySA4* all

      - uses: actions/upload-artifact@v4
        with:
          name: all
          path: all
